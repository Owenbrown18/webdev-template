---
import type { SiteContent } from '../../../types/content';

interface Props {
  site: SiteContent;
  hero?: {
    title?: string | null;
    subtitle?: string | null;
    primaryCtaLabel?: string | null;
    primaryCtaHref?: string | null;
    secondaryCtaLabel?: string | null;
    secondaryCtaHref?: string | null;
    image?: string | null;
    stats?: Array<{ label?: string; value?: string }>;
  };
}

const { site, hero = {} }: Props = Astro.props as Props;

const title = hero.title ?? site.name;
const tagline = hero.subtitle ?? site.tagline;
const primaryLabel = hero.primaryCtaLabel ?? 'Contact Us';
const primaryHref = hero.primaryCtaHref ?? '/contact';
const showSecondary = Boolean(hero.secondaryCtaLabel && hero.secondaryCtaHref);
const secondaryLabel = hero.secondaryCtaLabel ?? 'Book now';
const secondaryHref = hero.secondaryCtaHref ?? '#booking';
const image = hero.image ?? '/images/hero.jpg';
const stats = Array.isArray(hero.stats) ? hero.stats : [];
const showBookingCta = Boolean(site.booking?.embedUrl) && !showSecondary;

const bookingLabel = site.booking?.provider
  ? `Book with ${site.booking.provider}`
  : 'Book Now';
---
<section class="relative isolate overflow-hidden rounded-3xl bg-slate-900 text-white shadow-xl">
  <img
    src={image}
    alt=""
    class="absolute inset-0 h-full w-full object-cover"
    loading="lazy"
    decoding="async"
  />
  <div class="absolute inset-0 bg-slate-900/70" aria-hidden="true"></div>
  <div class="relative mx-auto max-w-5xl px-6 py-24 sm:py-28">
    <div class="max-w-xl space-y-6">
      <h1 class="text-4xl font-semibold tracking-tight sm:text-5xl">{title}</h1>
      <p class="text-lg text-slate-100/80">{tagline}</p>
      <div class="flex flex-wrap gap-4">
        <a
          href={primaryHref}
          class="inline-flex items-center justify-center rounded-full bg-[color:var(--color-primary)] px-6 py-3 text-base font-semibold text-white shadow-lg shadow-[color:var(--color-primary)]/30 transition hover:brightness-110"
        >
          {primaryLabel}
        </a>
        {showSecondary ? (
          <a
            href={secondaryHref}
            class="inline-flex items-center justify-center rounded-full border border-white/60 px-6 py-3 text-base font-semibold text-white transition hover:border-white hover:bg-white/10"
          >
            {secondaryLabel}
          </a>
        ) : (
          showBookingCta && (
            <a
              href="#booking"
              class="inline-flex items-center justify-center rounded-full border border-white/60 px-6 py-3 text-base font-semibold text-white transition hover:border-white hover:bg-white/10"
            >
              Book with {site.booking?.provider ?? 'us'}
            </a>
          )
        )}
      </div>
      {stats.length > 0 && (
        <dl class="grid gap-6 sm:grid-cols-3">
          {stats.map(({ label, value }) => (
            <div class="rounded-2xl border border-white/10 bg-white/5 p-4 text-center shadow-sm backdrop-blur">
              <dt class="text-sm font-medium text-white/70">{label}</dt>
              <dd class="text-2xl font-semibold text-white">{value}</dd>
            </div>
          ))}
        </dl>
      )}
    </div>
  </div>
</section>
