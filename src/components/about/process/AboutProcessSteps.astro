---
interface StepItem {
  title?: string;
  description?: string;
}

interface Props {
  title: string;
  intro?: string;
  eyebrow?: string;
  steps: StepItem[];
}

const {
  title,
  intro,
  eyebrow,
  steps,
}: Props = Astro.props as Props;
---
<section class="section-shell">
  <div class="section-container max-w-4xl">
    <div class="section-intro">
      {eyebrow && <p class="section-eyebrow">{eyebrow}</p>}
      <h2 class="section-heading">{title}</h2>
      {intro && <p class="section-subtitle">{intro}</p>}
    </div>
    <ol class="mt-12 space-y-8">
      {steps.map(({ title, description }, index) => (
        <li class="flex gap-6">
          <div class="relative flex w-12 flex-col items-center">
            <span class="flex h-10 w-10 items-center justify-center rounded-full bg-white text-xs font-semibold uppercase tracking-[0.16em] text-brand-primary shadow-[0_0_0_4px_rgba(37,99,235,0.12)]">
              {String(index + 1).padStart(2, '0')}
            </span>
            {index < steps.length - 1 && (
              <span class="mt-3 w-px flex-1 bg-gradient-to-b from-brand-primary/25 via-slate-200 to-slate-200" aria-hidden="true"></span>
            )}
          </div>
          <article class="surface-card flex-1 p-6 transition-shadow duration-200 hover:shadow-card-hover">
            <h3 class="text-lg font-semibold text-slate-900">{title}</h3>
            {description && <p class="mt-3 text-sm leading-6 text-slate-600">{description}</p>}
          </article>
        </li>
      ))}
    </ol>
  </div>
</section>
