---
interface StepItem {
  title?: string;
  description?: string;
}

interface Props {
  title: string;
  intro?: string;
  eyebrow?: string;
  steps: StepItem[];
  backgroundClass?: string;
  animationEnabled?: boolean;
}

const {
  title,
  intro,
  eyebrow,
  steps,
  backgroundClass,
  animationEnabled = true,
}: Props = Astro.props as Props;

const sectionClasses = [backgroundClass, 'section-shell'].filter(Boolean).join(' ');
const shouldAnimate = animationEnabled !== false;
const animationClasses = shouldAnimate
  ? 'motion-safe:translate-y-6 motion-safe:opacity-0 motion-safe:transition-all motion-safe:duration-[1400ms] motion-safe:ease-out data-[visible=true]:motion-safe:translate-y-0 data-[visible=true]:motion-safe:opacity-100'
  : '';
const cardClasses = [
  'surface-card flex-1 p-6 transition-shadow duration-200 hover:shadow-card-hover',
  animationClasses,
]
  .filter(Boolean)
  .join(' ');
---
<section class={sectionClasses} data-process-root>
  <div class="section-container max-w-4xl">
    <div class="section-intro">
      {eyebrow && <p class="section-eyebrow">{eyebrow}</p>}
      <h2 class="section-heading">{title}</h2>
      {intro && <p class="section-subtitle">{intro}</p>}
    </div>
    <ol class="mt-12 space-y-8">
      {steps.map(({ title, description }, index) => (
        <li class="flex gap-6">
          <div class="relative flex w-12 flex-col items-center">
            <span class="flex h-10 w-10 items-center justify-center rounded-full bg-white text-xs font-semibold uppercase tracking-[0.16em] text-brand-primary shadow-[0_0_0_4px_rgba(37,99,235,0.12)]">
              {String(index + 1).padStart(2, '0')}
            </span>
            {index < steps.length - 1 && (
              <span class="mt-3 w-px flex-1 bg-gradient-to-b from-brand-primary/25 via-slate-200 to-slate-200" aria-hidden="true"></span>
            )}
          </div>
          <article
            data-process-card
            class={cardClasses}
          >
            <h3 class="text-lg font-semibold text-slate-900">{title}</h3>
            {description && <p class="mt-3 text-sm leading-6 text-slate-600">{description}</p>}
          </article>
        </li>
      ))}
    </ol>
  </div>
  {shouldAnimate ? (
    <script>
      const roots = Array.from(document.querySelectorAll('[data-process-root]'));
      const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia === 'function';
      const prefersReducedMotion = supportMatchMedia
        ? window.matchMedia('(prefers-reduced-motion: reduce)').matches
        : false;
      const reveal = (el: Element | null) => {
        if (el instanceof HTMLElement) {
          el.dataset.visible = 'true';
        }
      };

      roots.forEach((root) => {
        const cards = Array.from(root.querySelectorAll('[data-process-card]'));
        if (cards.length === 0) return;

        if (!prefersReducedMotion && 'IntersectionObserver' in window) {
          const observer = new IntersectionObserver(
            (entries, obs) => {
              entries.forEach((entry) => {
                if (entry.isIntersecting) {
                  const element = entry.target;
                  reveal(element);
                  obs.unobserve(element);
                }
              });
            },
            {
              rootMargin: '0px 0px -10% 0px',
              threshold: 0.1,
            },
          );

          cards.forEach((card) => observer.observe(card));
        } else {
          cards.forEach((card) => reveal(card));
        }
      });
    </script>
  ) : null}
</section>
