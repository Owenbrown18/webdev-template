---
import {
  about,
  getAboutProcessVariant,
  getAboutProcessBackgroundTone,
  isAboutProcessAnimationEnabled,
} from '../../../config/content';
import {
  normalizeBackgroundTone,
  normalizeBackgroundColor,
  sectionBackgroundClass,
  sectionBackgroundToneAttr,
  createBackgroundStyle,
} from '../../../utils/background';
import AboutProcessSteps from './AboutProcessSteps.astro';

const variants: Record<string, any> = {
  steps: AboutProcessSteps,
};

const variantKey = getAboutProcessVariant();
const Component = variantKey === 'none' ? null : variants[variantKey] ?? variants.steps;

const props = Astro.props ?? {};

const base = about.process ?? {};
const title = props.title ?? base.title ?? 'How we work';
const intro = props.intro ?? base.intro ?? 'A simple, dependable process keeps every project on track.';
const eyebrow = props.eyebrow ?? base.eyebrow;
const rawSteps = Array.isArray(props.steps) ? props.steps : base.steps;
const steps = Array.isArray(rawSteps) ? rawSteps.filter(Boolean) : [];
const fallbackTone = getAboutProcessBackgroundTone();
const backgroundTone = normalizeBackgroundTone(
  props.backgroundTone ?? base.background?.tone ?? fallbackTone,
);
const backgroundClass = sectionBackgroundClass(backgroundTone);
const backgroundToneAttr = sectionBackgroundToneAttr(backgroundTone);
const backgroundColor = normalizeBackgroundColor(props.backgroundColor ?? base.background?.color);
const backgroundStyle = createBackgroundStyle(backgroundColor);
const animationSetting = props.animation ?? base.animation;
const animationEnabled = animationSetting ?? isAboutProcessAnimationEnabled();
---
{Component && steps.length > 0 ? (
  <Component
    title={title}
    intro={intro}
    eyebrow={eyebrow ?? undefined}
    steps={steps}
    backgroundClass={backgroundClass}
    backgroundTone={backgroundToneAttr}
    backgroundStyle={backgroundStyle}
    animationEnabled={animationEnabled !== false}
  />
) : null}
