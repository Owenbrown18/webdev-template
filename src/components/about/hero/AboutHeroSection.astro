---
import {
  site,
  getAboutHeroVariant,
  getAboutHeroBackgroundTone,
  isAboutHeroAnimationEnabled,
} from '../../../config/content';
import { normalizeBackgroundTone, sectionBackgroundClass } from '../../../utils/background';
import AboutHeroClassic from './AboutHeroClassic.astro';
import AboutHeroShowcase from './AboutHeroShowcase.astro';

const variants: Record<string, any> = {
  classic: AboutHeroClassic,
  showcase: AboutHeroShowcase,
};

const variantKey = getAboutHeroVariant();
const Component = variantKey === 'none' ? null : variants[variantKey] ?? variants.classic;
const rawProps = (Astro.props ?? {}) as Record<string, any>;
const overrideTone = rawProps.backgroundTone;
const overrideClass = rawProps.backgroundClass;
const restProps = { ...rawProps };
const animationOverride = rawProps.animation as boolean | undefined;
delete restProps.backgroundTone;
delete restProps.backgroundClass;
delete restProps.animation;
const fallbackTone = getAboutHeroBackgroundTone();
const backgroundTone = normalizeBackgroundTone(overrideTone ?? fallbackTone);
const backgroundClass = overrideClass ?? sectionBackgroundClass(backgroundTone);
const animationEnabled =
  animationOverride !== undefined ? animationOverride : isAboutHeroAnimationEnabled();
---
{Component ? (
  <Component
    site={site}
    backgroundClass={backgroundClass}
    animationEnabled={animationEnabled !== false}
    {...restProps}
  />
) : null}
