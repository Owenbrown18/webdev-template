---
import { about } from '../../../config/content';

const hero = about.hero ?? {};
const {
  title = 'Meet the people behind the work',
  subtitle = 'Personal, reliable, and committed to making every project feel effortless.',
  ctaLabel = 'Learn more',
  ctaHref = '#story',
  image = '/images/about-hero.jpg',
  stats = [],
} = hero;

const { backgroundClass, animationEnabled = true } = Astro.props as {
  backgroundClass?: string;
  animationEnabled?: boolean;
};

const shouldAnimate = animationEnabled !== false;
const sectionClasses = [backgroundClass, 'section-shell'].filter(Boolean).join(' ');
const textClasses = [
  'space-y-6',
  shouldAnimate
    ? 'motion-safe:opacity-0 motion-safe:-translate-y-4 motion-safe:transition-all motion-safe:duration-[900ms] motion-safe:ease-out data-[visible=true]:motion-safe:opacity-100 data-[visible=true]:motion-safe:translate-y-0'
    : '',
]
  .filter(Boolean)
  .join(' ');
const imageClasses = [
  'relative h-full overflow-hidden rounded-3xl border border-slate-200 bg-slate-900 shadow-lg',
  shouldAnimate
    ? 'motion-safe:scale-[1.03] motion-safe:transition-transform motion-safe:duration-[1400ms] motion-safe:ease-out data-[visible=true]:motion-safe:scale-100'
    : '',
]
  .filter(Boolean)
  .join(' ');
---
<section
  class={sectionClasses}
  data-hero-root
  data-animate={shouldAnimate ? 'true' : undefined}
>
  <div class="section-container grid gap-10 sm:grid-cols-[minmax(0,1.05fr)_minmax(0,0.95fr)] sm:items-center">
    <div class={textClasses} data-hero-text>
      <h1 class="text-4xl font-semibold tracking-tight text-slate-900 sm:text-5xl">{title}</h1>
      <p class="text-base leading-relaxed text-slate-600">{subtitle}</p>
      <div class="flex flex-wrap gap-4">
        <a
          href={ctaHref}
          class="inline-flex items-center justify-center rounded-full bg-brand-primary px-6 py-3 text-base font-semibold text-white shadow-brand-glow transition hover:brightness-110"
        >
          {ctaLabel}
        </a>
        <a
          href="/contact"
          class="inline-flex items-center justify-center rounded-full border border-slate-200 px-6 py-3 text-base font-semibold text-slate-900 transition hover:border-brand-primary hover:text-brand-primary"
        >
          Start a project
        </a>
      </div>
      {Array.isArray(stats) && stats.length > 0 && (
        <dl class="grid gap-6 sm:grid-cols-3">
          {stats.map(({ label, value }) => (
            <div class="rounded-2xl border border-slate-200 bg-white p-4 text-center shadow-sm">
              <dt class="text-sm font-medium text-slate-500">{label}</dt>
              <dd class="text-2xl font-semibold text-slate-900">{value}</dd>
            </div>
          ))}
        </dl>
      )}
    </div>
    <div class={imageClasses} data-hero-image>
      <img src={image} alt="" class="h-full w-full object-cover" loading="lazy" decoding="async" />
      <div class="absolute inset-0 bg-slate-900/20" aria-hidden="true"></div>
    </div>
  </div>
  {shouldAnimate ? (
    <script>
      const roots = Array.from(document.querySelectorAll('[data-hero-root][data-animate="true"]'));
      const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia === 'function';
      const prefersReducedMotion = supportMatchMedia
        ? window.matchMedia('(prefers-reduced-motion: reduce)').matches
        : false;
      const reveal = (el: Element | null) => {
        if (el instanceof HTMLElement) {
          el.dataset.visible = 'true';
        }
      };

      roots.forEach((root) => {
        if (!(root instanceof HTMLElement)) {
          return;
        }

        if (root.dataset.heroAnimated === 'true') {
          return;
        }

        root.dataset.heroAnimated = 'true';
        const text = root.querySelector('[data-hero-text]');
        const image = root.querySelector('[data-hero-image]');

        if (prefersReducedMotion) {
          reveal(text);
          reveal(image);
          return;
        }

        requestAnimationFrame(() => {
          requestAnimationFrame(() => {
            reveal(text);
            reveal(image);
          });
        });
      });
    </script>
  ) : null}
</section>
