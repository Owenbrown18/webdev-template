---
interface ValueItem {
  title?: string;
  description?: string;
  icon?: string;
}

interface Props {
  title: string;
  intro?: string;
  eyebrow?: string;
  items: ValueItem[];
  backgroundClass?: string;
}

const {
  title,
  intro,
  eyebrow,
  items,
  backgroundClass,
}: Props = Astro.props as Props;

const sectionClasses = [backgroundClass, 'section-shell'].filter(Boolean).join(' ');
---
<section class={sectionClasses}>
  <div class="section-container">
    <div class="section-intro max-w-3xl">
      {eyebrow && <p class="section-eyebrow">{eyebrow}</p>}
      <h2 class="section-heading">{title}</h2>
      {intro && <p class="section-subtitle leading-7">{intro}</p>}
    </div>
    <div class="mt-12 grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
      {items.map(({ title, description, icon }) => (
        <article class="surface-card h-full p-6 text-left transition-shadow duration-200 hover:shadow-card-hover sm:p-7">
          <div class="flex h-12 w-12 items-center justify-center rounded-full bg-brand-primary/10 text-2xl font-semibold text-brand-primary">
            {icon ? icon : '+'}
          </div>
          <h3 class="mt-6 text-lg font-semibold text-slate-900">{title}</h3>
          <p class="mt-3 text-sm leading-6 text-slate-600">{description}</p>
        </article>
      ))}
    </div>
  </div>
</section>
