---
import {
  about,
  getAboutValuesVariant,
  getAboutValuesBackgroundTone,
  isAboutValuesAnimationEnabled,
} from '../../../config/content';
import {
  normalizeBackgroundTone,
  normalizeBackgroundColor,
  sectionBackgroundClass,
  sectionBackgroundToneAttr,
  createBackgroundStyle,
} from '../../../utils/background';
import AboutValuesGrid from './AboutValuesGrid.astro';
import AboutValuesList from './AboutValuesList.astro';

const variants: Record<string, any> = {
  grid: AboutValuesGrid,
  list: AboutValuesList,
};

const variantKey = getAboutValuesVariant();
const Component = variantKey === 'none' ? null : variants[variantKey] ?? variants.grid;

const props = (Astro.props ?? {}) as Record<string, any>;

const base = about.values ?? {};
const title = props.title ?? base.title ?? 'Guided by service-first values';
const intro = props.intro ?? base.intro ?? `We show up with integrity, clear communication, and dependable follow-through on every project.`;
const eyebrow = props.eyebrow ?? base.eyebrow;
const supporting = props.supporting ?? base.supporting;
const rawItems = Array.isArray(props.items) ? props.items : base.items;
const items = Array.isArray(rawItems) ? rawItems.filter(Boolean) : [];
const fallbackTone = getAboutValuesBackgroundTone();
const backgroundTone = normalizeBackgroundTone(
  props.backgroundTone ?? base.background?.tone ?? fallbackTone,
);
const backgroundClass = sectionBackgroundClass(backgroundTone);
const backgroundToneAttr = sectionBackgroundToneAttr(backgroundTone);
const backgroundColor = normalizeBackgroundColor(props.backgroundColor ?? base.background?.color);
const backgroundStyle = createBackgroundStyle(backgroundColor);
const animationOverride = props.animation;
const animationEnabled = animationOverride !== undefined ? animationOverride !== false : isAboutValuesAnimationEnabled();
---
{Component && items.length > 0 ? (
  <Component
    title={title}
    intro={intro}
    eyebrow={eyebrow ?? undefined}
    supporting={supporting ?? undefined}
    items={items}
    backgroundClass={backgroundClass}
    backgroundTone={backgroundToneAttr}
    backgroundStyle={backgroundStyle}
    animationEnabled={animationEnabled}
  />
) : null}
