---
interface Member {
  name?: string;
  role?: string;
  bio?: string;
  image?: string;
  highlight?: string;
}

interface Props {
  title: string;
  intro?: string;
  eyebrow?: string;
  members: Member[];
  backgroundClass?: string;
}

const {
  title,
  intro,
  eyebrow,
  members,
  backgroundClass,
}: Props = Astro.props as Props;

const sectionClasses = [
  backgroundClass,
  'section-shell',
  'relative',
  'isolate',
  'overflow-hidden',
  'rounded-[2.5rem]',
  'bg-slate-900',
  'text-white',
]
  .filter(Boolean)
  .join(' ');
---
<section class={sectionClasses}>
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_top,_rgba(255,255,255,0.14),_rgba(15,23,42,0.92))]" aria-hidden="true"></div>
  <div class="section-container relative max-w-5xl space-y-12">
    <div class="mx-auto max-w-3xl space-y-4 text-center">
      {eyebrow && (
        <p class="text-sm font-semibold uppercase tracking-[0.28em] text-white/70">{eyebrow}</p>
      )}
      <h2 class="text-3xl font-semibold tracking-tight sm:text-4xl">{title}</h2>
      {intro && <p class="text-base leading-7 text-white/70">{intro}</p>}
    </div>
    <div class="space-y-6">
      {members.map(({ name, role, bio, image, highlight }) => (
        <article class="relative flex flex-col gap-6 rounded-3xl bg-white/5 p-6 shadow-sm backdrop-blur transition duration-200 hover:bg-white/10 hover:shadow-md focus-within:shadow-md sm:flex-row sm:items-center sm:p-8">
          <div class="relative h-28 w-28 flex-shrink-0 overflow-hidden rounded-2xl bg-white/10 sm:h-32 sm:w-32">
            {image ? (
              <img
                src={image}
                alt={name ? `${name} headshot` : ''}
                class="h-full w-full object-cover"
                loading="lazy"
                decoding="async"
              />
            ) : (
              <div class="flex h-full w-full items-center justify-center bg-white/10 text-2xl font-semibold text-white/80">
                {name
                  ?.split(' ')
                  .map((part) => part[0])
                  .filter(Boolean)
                  .slice(0, 2)
                  .join('') ?? 'NB'}
              </div>
            )}
          </div>
          <div class="flex-1 space-y-3">
            <div class="space-y-2">
              <h3 class="text-lg font-semibold text-white">{name}</h3>
              <div class="flex flex-wrap gap-2 text-xs font-semibold uppercase tracking-wide">
                {role && <span class="text-brand-primary/80">{role}</span>}
                {highlight && (
                  <span class="rounded-full bg-white/15 px-3 py-1 text-white/80">
                    {highlight}
                  </span>
                )}
              </div>
            </div>
            {bio && <p class="text-sm leading-6 text-white/70">{bio}</p>}
          </div>
        </article>
      ))}
    </div>
  </div>
</section>
